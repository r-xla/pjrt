#loc1 = loc("x")
#loc2 = loc("i1")
#loc3 = loc("i2")
#loc4 = loc("i3")
module @jit_subset_3d attributes {jax.uses_shape_polymorphism = false, mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<2x2x2xf32> loc("x"), %arg1: tensor<i32> loc("i1"), %arg2: tensor<i32> loc("i2"), %arg3: tensor<i32> loc("i3")) -> (tensor<f32> {jax.result_info = "result"}) {
    %c = stablehlo.constant dense<2> : tensor<i32> loc(#loc)
    %c_0 = stablehlo.constant dense<0> : tensor<i32> loc(#loc)
    %0 = stablehlo.compare  LT, %arg1, %c_0,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1> loc(#loc10)
    %1 = stablehlo.add %arg1, %c : tensor<i32> loc(#loc11)
    %2 = stablehlo.select %0, %1, %arg1 : tensor<i1>, tensor<i32> loc(#loc12)
    %3 = stablehlo.compare  LT, %arg2, %c_0,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1> loc(#loc10)
    %4 = stablehlo.add %arg2, %c : tensor<i32> loc(#loc11)
    %5 = stablehlo.select %3, %4, %arg2 : tensor<i1>, tensor<i32> loc(#loc12)
    %6 = stablehlo.compare  LT, %arg3, %c_0,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1> loc(#loc10)
    %7 = stablehlo.add %arg3, %c : tensor<i32> loc(#loc11)
    %8 = stablehlo.select %6, %7, %arg3 : tensor<i1>, tensor<i32> loc(#loc12)
    %9 = stablehlo.dynamic_slice %arg0, %2, %5, %8, sizes = [1, 1, 1] : (tensor<2x2x2xf32>, tensor<i32>, tensor<i32>, tensor<i32>) -> tensor<1x1x1xf32> loc(#loc13)
    %10 = stablehlo.reshape %9 : (tensor<1x1x1xf32>) -> tensor<f32> loc(#loc14)
    return %10 : tensor<f32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc = loc(unknown)
#loc5 = loc("<string>":24:9 to :22)
#loc6 = loc("<string>":29:14 to :56)
#loc7 = loc("subset_3d"(#loc5))
#loc8 = loc("<module>"(#loc6))
#loc9 = loc(callsite(#loc7 at #loc8))
#loc10 = loc("jit(subset_3d)/jit(main)/lt"(#loc9))
#loc11 = loc("jit(subset_3d)/jit(main)/add"(#loc9))
#loc12 = loc("jit(subset_3d)/jit(main)/select_n"(#loc9))
#loc13 = loc("jit(subset_3d)/jit(main)/dynamic_slice"(#loc9))
#loc14 = loc("jit(subset_3d)/jit(main)/squeeze"(#loc9))

