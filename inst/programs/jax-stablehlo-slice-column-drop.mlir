#loc1 = loc("x")
#loc2 = loc("col_idx")
module @jit_slice_column_drop attributes {jax.uses_shape_polymorphism = false, mhlo.num_partitions = 1 : i32, mhlo.num_replicas = 1 : i32} {
  func.func public @main(%arg0: tensor<3x4xf32> loc("x"), %arg1: tensor<i32> loc("col_idx")) -> (tensor<3xf32> {jax.result_info = "result"}) {
    %c = stablehlo.constant dense<4> : tensor<i32> loc(#loc)
    %c_0 = stablehlo.constant dense<0> : tensor<i32> loc(#loc)
    %0 = stablehlo.compare  LT, %arg1, %c_0,  SIGNED : (tensor<i32>, tensor<i32>) -> tensor<i1> loc(#loc8)
    %1 = stablehlo.add %arg1, %c : tensor<i32> loc(#loc9)
    %2 = stablehlo.select %0, %1, %arg1 : tensor<i1>, tensor<i32> loc(#loc10)
    %3 = stablehlo.dynamic_slice %arg0, %c_0, %2, sizes = [3, 1] : (tensor<3x4xf32>, tensor<i32>, tensor<i32>) -> tensor<3x1xf32> loc(#loc11)
    %4 = stablehlo.reshape %3 : (tensor<3x1xf32>) -> tensor<3xf32> loc(#loc12)
    return %4 : tensor<3xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc = loc(unknown)
#loc3 = loc("<string>":11:9 to :22)
#loc4 = loc("<string>":18:11 to :58)
#loc5 = loc("slice_column_drop"(#loc3))
#loc6 = loc("<module>"(#loc4))
#loc7 = loc(callsite(#loc5 at #loc6))
#loc8 = loc("jit(slice_column_drop)/jit(main)/lt"(#loc7))
#loc9 = loc("jit(slice_column_drop)/jit(main)/add"(#loc7))
#loc10 = loc("jit(slice_column_drop)/jit(main)/select_n"(#loc7))
#loc11 = loc("jit(slice_column_drop)/jit(main)/dynamic_slice"(#loc7))
#loc12 = loc("jit(slice_column_drop)/jit(main)/squeeze"(#loc7))

